# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-10-27 13:15
from __future__ import unicode_literals

import apps.models.utils
import apps.models.validators
import ckeditor_uploader.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_file', models.ImageField(help_text='Sube una imagen representativa haciendo click en la imagen inferior.La imagen ha de tener ancho mínimo de 300 píxeles y máximo de 1920, y altura mínima de 300 píxeles y máxima de 1280. Formatos permitidos: PNG, JPG, JPEG.', upload_to=apps.models.utils.RenameProjectImage(), validators=[apps.models.validators.ImageSizeValidator({'max_height': 1280, 'max_width': 1920, 'min_height': 300, 'min_width': 600}), apps.models.validators.ImageTypeValidator(['jpeg', 'png'])], verbose_name='Archivo')),
                ('alt_text', models.CharField(help_text='Texto que describe la imagen para screen readers ', max_length=128, verbose_name='Texto alternativo')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='El nombre del proyecto', max_length=128, unique=True, verbose_name='Nombre del proyecto')),
                ('slug', models.SlugField(editable=False, verbose_name='Slug')),
                ('category', models.CharField(choices=[('DI', 'Plataformas digitales'), ('HA', 'Prototipado de hardware'), ('IN', 'Instalaciones interactivas'), ('CU', 'Gestión y producción cultural'), ('DI', 'Diseño'), ('TA', 'Talleres y presentaciones')], default='DI', help_text='Categoría del proyecto', max_length=128, verbose_name='Categoría')),
                ('published_date', models.DateField(default=django.utils.timezone.now, null=True, verbose_name='Fecha de publicación')),
                ('creation_date', models.DateField(blank=True, editable=False, null=True)),
                ('update_date', models.DateField(blank=True, editable=False, null=True)),
                ('summary', models.TextField(blank=True, help_text='Una resumen corto del proyecto para cabeceras y vistas.', verbose_name='Resumen')),
                ('body', ckeditor_uploader.fields.RichTextUploadingField(blank=True, verbose_name='Descripción del proyecto')),
                ('start_date', models.DateField(blank=True, editable=False, help_text='Fecha aproximada de comienzo del proyecto.', null=True, verbose_name='Fecha de comienzo')),
                ('end_date', models.DateField(blank=True, editable=False, help_text='Fecha aproximada de finalización del proyecto.', null=True, verbose_name='Fecha de finalización')),
                ('published', models.BooleanField(default=False, verbose_name='Publicado')),
                ('featured', models.BooleanField(default=False, verbose_name='Destacado')),
            ],
        ),
        migrations.CreateModel(
            name='RelatedEntity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Nombre de la entidad')),
                ('link', models.URLField(help_text='Enlace opcional para obtener más info sobre el cliente', verbose_name='Enlace a un site relacionado')),
                ('category', models.URLField(help_text='Especifica la relación de la entidad con el proyecto', verbose_name='Categoría')),
            ],
        ),
        migrations.CreateModel(
            name='TechTaxonomy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nombre de la tecnología', max_length=128, verbose_name='Tecnología')),
                ('description', models.TextField(blank=True, help_text='Una resumen corto de la tecnología.', verbose_name='Resumen')),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='related_entity',
            field=models.ManyToManyField(blank=True, help_text='Especifica aquí los clientes del Proyecto.', to='models.RelatedEntity', verbose_name='Clientes del proyecto'),
        ),
        migrations.AddField(
            model_name='project',
            name='technology',
            field=models.ManyToManyField(blank=True, help_text='Especifica aquí tecnologías empleadas en el Proyecto.', to='models.TechTaxonomy', verbose_name='Tecnologías empleadas'),
        ),
    ]
